<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="ray__sphere__intersections_8cpp" kind="file" language="C++">
    <compoundname>ray_sphere_intersections.cpp</compoundname>
    <includes refid="matrix_8cpp" local="no">matrix</includes>
    <includes refid="tuple_8cpp" local="no">tuple</includes>
    <includes local="no">std</includes>
    <incdepgraph>
      <node id="2">
        <label>matrix</label>
        <link refid="matrix_8cpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/mccakit/desktop/projects/ray_tracer_challange/src/ray_sphere_intersections.cpp</label>
        <link refid="ray__sphere__intersections_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tuple</label>
        <link refid="tuple_8cpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>std</label>
      </node>
    </incdepgraph>
    <innerclass refid="classray__sphere__intersections_1_1ray" prot="public">ray_sphere_intersections::ray</innerclass>
    <innerclass refid="classray__sphere__intersections_1_1intersection" prot="public">ray_sphere_intersections::intersection</innerclass>
    <innerclass refid="classray__sphere__intersections_1_1sphere" prot="public">ray_sphere_intersections::sphere</innerclass>
    <innernamespace refid="namespaceray__sphere__intersections">ray_sphere_intersections</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">export</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">module</highlight><highlight class="normal"><sp/><ref refid="module_ray__sphere__intersections" kindref="compound">ray_sphere_intersections</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>std;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="module_tuple" kindref="compound">tuple</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="module_matrix" kindref="compound">matrix</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespaceray__sphere__intersections" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">export</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceray__sphere__intersections" kindref="compound">ray_sphere_intersections</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11" refid="classray__sphere__intersections_1_1ray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classray__sphere__intersections_1_1ray" kindref="compound">ray</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtuple_1_1tuple" kindref="compound">tuple::tuple&lt;4&gt;</ref><sp/><ref refid="classray__sphere__intersections_1_1ray_1a7492db958974e0098850072364375997" kindref="member">origin</ref>{};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtuple_1_1tuple" kindref="compound">tuple::tuple&lt;4&gt;</ref><sp/><ref refid="classray__sphere__intersections_1_1ray_1a038dae6bb7ec2082bf6e16a019010028" kindref="member">direction</ref>{};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classray__sphere__intersections_1_1ray" kindref="compound">ray</ref>(<ref refid="classtuple_1_1tuple" kindref="compound">tuple::tuple&lt;4&gt;</ref><sp/><ref refid="classray__sphere__intersections_1_1ray_1a7492db958974e0098850072364375997" kindref="member">origin</ref>,<sp/><ref refid="classtuple_1_1tuple" kindref="compound">tuple::tuple&lt;4&gt;</ref><sp/><ref refid="classray__sphere__intersections_1_1ray_1a038dae6bb7ec2082bf6e16a019010028" kindref="member">direction</ref>)<sp/>:<sp/><ref refid="classray__sphere__intersections_1_1ray_1a7492db958974e0098850072364375997" kindref="member">origin</ref>{<ref refid="classray__sphere__intersections_1_1ray_1a7492db958974e0098850072364375997" kindref="member">origin</ref>},<sp/><ref refid="classray__sphere__intersections_1_1ray_1a038dae6bb7ec2082bf6e16a019010028" kindref="member">direction</ref>{<ref refid="classray__sphere__intersections_1_1ray_1a038dae6bb7ec2082bf6e16a019010028" kindref="member">direction</ref>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtuple_1_1tuple" kindref="compound">tuple::tuple&lt;4&gt;</ref><sp/><ref refid="classray__sphere__intersections_1_1ray_1aed78ff0705b55c1b254a7a2deb074477" kindref="member">position</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1ray_1a7492db958974e0098850072364375997" kindref="member">origin</ref><sp/>+<sp/><ref refid="classray__sphere__intersections_1_1ray_1a038dae6bb7ec2082bf6e16a019010028" kindref="member">direction</ref><sp/>*<sp/>time;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classray__sphere__intersections_1_1ray" kindref="compound">ray</ref><sp/><ref refid="classray__sphere__intersections_1_1ray_1a92139d905108d25dd7d8b66850d9de4d" kindref="member">transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmatrix_1_1matrix" kindref="compound">matrix::matrix&lt;4, 4&gt;</ref><sp/>&amp;in_matrix)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="27"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1ray" kindref="compound">ray</ref>(in_matrix<sp/>*<sp/><ref refid="classray__sphere__intersections_1_1ray_1a7492db958974e0098850072364375997" kindref="member">origin</ref>,<sp/>in_matrix<sp/>*<sp/><ref refid="classray__sphere__intersections_1_1ray_1a038dae6bb7ec2082bf6e16a019010028" kindref="member">direction</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classray__sphere__intersections_1_1sphere" kindref="compound">sphere</ref>;</highlight></codeline>
<codeline lineno="32" refid="classray__sphere__intersections_1_1intersection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classray__sphere__intersections_1_1intersection" kindref="compound">intersection</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1intersection_1acfccd89adf3d41989e28bf774913c00b" kindref="member">time</ref>{};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::reference_wrapper&lt;sphere&gt;<sp/><ref refid="classray__sphere__intersections_1_1intersection_1abc4c02fc55445eea8f41f70ae9b7ad16" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classray__sphere__intersections_1_1intersection" kindref="compound">intersection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1intersection_1acfccd89adf3d41989e28bf774913c00b" kindref="member">time</ref>,<sp/><ref refid="classray__sphere__intersections_1_1sphere" kindref="compound">sphere</ref><sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="classray__sphere__intersections_1_1intersection_1acfccd89adf3d41989e28bf774913c00b" kindref="member">time</ref>{<ref refid="classray__sphere__intersections_1_1intersection_1acfccd89adf3d41989e28bf774913c00b" kindref="member">time</ref>},<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">{</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classray__sphere__intersections_1_1sphere" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classray__sphere__intersections_1_1sphere" kindref="compound">sphere</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">{};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtuple_1_1tuple" kindref="compound">tuple::tuple&lt;4&gt;</ref><sp/><ref refid="classray__sphere__intersections_1_1sphere_1a98e1d0ff1fa98aabf551b6f2dc636f9f" kindref="member">origin</ref>{<ref refid="namespacetuple_1ac5c930222bb77139eb2f130fc9a62c04" kindref="member">tuple::point</ref>(0,<sp/>0,<sp/>0)};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1sphere_1a341c6d1bdfede53982922b489e343338" kindref="member">radious</ref>{1};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmatrix_1_1matrix" kindref="compound">matrix::matrix&lt;4, 4&gt;</ref><sp/><ref refid="classray__sphere__intersections_1_1sphere_1aec646a7838c472500f0a1f27324c74ce" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classray__sphere__intersections_1_1sphere" kindref="compound">sphere</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">{</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">},<sp/><ref refid="classray__sphere__intersections_1_1sphere_1aec646a7838c472500f0a1f27324c74ce" kindref="member">transform</ref>(<ref refid="namespacematrix_1ac1569d058e5bf01e82d84c01ff30e034" kindref="member">matrix::identity_matrix</ref>())</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1sphere_1a8bbeca24d1f1dc953342cb8488d07e66" kindref="member">set_transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmatrix_1_1matrix" kindref="compound">matrix::matrix&lt;4,4&gt;</ref>&amp;<sp/>t)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classray__sphere__intersections_1_1sphere_1aec646a7838c472500f0a1f27324c74ce" kindref="member">transform</ref><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;intersection&gt;<sp/><ref refid="classray__sphere__intersections_1_1sphere_1a15532f4c1a207348602b339bd6437325" kindref="member">intersect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1ray" kindref="compound">ray</ref><sp/>&amp;<ref refid="classray__sphere__intersections_1_1ray" kindref="compound">ray</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transformed_ray<sp/>{<ref refid="classray__sphere__intersections_1_1ray" kindref="compound">ray</ref>.<ref refid="classray__sphere__intersections_1_1ray_1a92139d905108d25dd7d8b66850d9de4d" kindref="member">transform</ref>(<ref refid="classray__sphere__intersections_1_1sphere_1aec646a7838c472500f0a1f27324c74ce" kindref="member">transform</ref>.<ref refid="classmatrix_1_1matrix_1a2422dff1a3cccde4ee8483aa3bee34c1" kindref="member">inverse</ref>())};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtuple_1_1tuple" kindref="compound">tuple::tuple&lt;4&gt;</ref><sp/>sphere_to_ray{transformed_ray.origin<sp/>-<sp/><ref refid="classray__sphere__intersections_1_1sphere_1a98e1d0ff1fa98aabf551b6f2dc636f9f" kindref="member">origin</ref>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a{<ref refid="namespacetuple_1ae8a3c5721eea747e21d3bd0126c18dce" kindref="member">tuple::dot_product</ref>(transformed_ray.direction,<sp/>transformed_ray.direction)};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b{2<sp/>*<sp/><ref refid="namespacetuple_1ae8a3c5721eea747e21d3bd0126c18dce" kindref="member">tuple::dot_product</ref>(transformed_ray.direction,<sp/>sphere_to_ray)};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c{<ref refid="namespacetuple_1ae8a3c5721eea747e21d3bd0126c18dce" kindref="member">tuple::dot_product</ref>(sphere_to_ray,<sp/>sphere_to_ray)<sp/>-<sp/>1};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>discriminant{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::pow(b,<sp/>2))<sp/>-<sp/>4<sp/>*<sp/>a<sp/>*<sp/>c};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(discriminant<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1{(-b<sp/>-<sp/>std::sqrt(discriminant))<sp/>/<sp/>(2<sp/>*<sp/>a)};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t2{(-b<sp/>+<sp/>std::sqrt(discriminant))<sp/>/<sp/>(2<sp/>*<sp/>a)};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{{t1,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">},<sp/>{t2,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceray__sphere__intersections_1acf7af95574c32693f9c4a352d7ae7359" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1sphere" kindref="compound">sphere</ref><sp/>&amp;ls_sphere,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classray__sphere__intersections_1_1sphere" kindref="compound">sphere</ref><sp/>&amp;rs_sphere)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ls_sphere.<ref refid="classray__sphere__intersections_1_1sphere_1a46324d4d76cdb94d2ec46edff053053d" kindref="member">id</ref><sp/>==<sp/>rs_sphere.<ref refid="classray__sphere__intersections_1_1sphere_1a46324d4d76cdb94d2ec46edff053053d" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceray__sphere__intersections_1acf7af95574c32693f9c4a352d7ae7359" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>intersection<sp/>&amp;lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>intersection<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.time<sp/>==<sp/>rhs.time<sp/>&amp;&amp;<sp/>lhs.object.get()<sp/>==<sp/>rhs.object.get();</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/>std::vector&lt;intersection&gt;<sp/><ref refid="namespaceray__sphere__intersections_1a0da96e05b7adeda81f139e07d9197b8f" kindref="member">intersections</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ts<sp/>&amp;...args)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;std::reference_wrapper&lt;const<sp/>intersection&gt;,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(args)&gt;<sp/>refs{args...};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(refs.begin(),<sp/>refs.end(),<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>intersection<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>intersection<sp/>&amp;b)<sp/>{<sp/>return<sp/>a.time<sp/>&lt;<sp/>b.time;<sp/>});</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;intersection&gt;<sp/>output;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>output.reserve(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(args));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;ref<sp/>:<sp/>refs)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.push_back(ref.get());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/>std::optional&lt;intersection&gt;<sp/><ref refid="namespaceray__sphere__intersections_1a76ccb9b7a9634cca8903200b5278abcf" kindref="member">hit</ref>(Ts<sp/>&amp;...args)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;std::reference_wrapper&lt;intersection&gt;,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(args)&gt;<sp/>arguments{args...};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_index{-1};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compare_time{std::numeric_limits&lt;float&gt;::max()};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/>arguments.size();<sp/>++i)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arguments[i].get().time<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>arguments[i].get().time<sp/>&lt;<sp/>compare_time)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_index<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compare_time<sp/>=<sp/>arguments[i].get().time;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_index<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arguments[output_index];</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">std::optional&lt;intersection&gt;<sp/><ref refid="namespaceray__sphere__intersections_1a76ccb9b7a9634cca8903200b5278abcf" kindref="member">hit</ref>(std::vector&lt;intersection&gt;<sp/>&amp;<ref refid="namespaceray__sphere__intersections_1a0da96e05b7adeda81f139e07d9197b8f" kindref="member">intersections</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_index{-1};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compare_time{std::numeric_limits&lt;float&gt;::max()};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="namespaceray__sphere__intersections_1a0da96e05b7adeda81f139e07d9197b8f" kindref="member">intersections</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceray__sphere__intersections_1a0da96e05b7adeda81f139e07d9197b8f" kindref="member">intersections</ref>[i].time<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="namespaceray__sphere__intersections_1a0da96e05b7adeda81f139e07d9197b8f" kindref="member">intersections</ref>[i].time<sp/>&lt;<sp/>compare_time)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_index<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compare_time<sp/>=<sp/><ref refid="namespaceray__sphere__intersections_1a0da96e05b7adeda81f139e07d9197b8f" kindref="member">intersections</ref>[i].time;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_index<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceray__sphere__intersections_1a0da96e05b7adeda81f139e07d9197b8f" kindref="member">intersections</ref>[output_index];</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ray_sphere_intersections</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/ray_sphere_intersections.cpp"/>
  </compounddef>
</doxygen>
