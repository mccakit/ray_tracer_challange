<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="tuple_8cpp" kind="file" language="C++">
    <compoundname>tuple.cpp</compoundname>
    <includes local="no">std</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/mccakit/desktop/projects/ray_tracer_challange/src/tuple.cpp</label>
        <link refid="tuple_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>std</label>
      </node>
    </incdepgraph>
    <innerclass refid="classtuple_1_1tuple" prot="public">tuple::tuple</innerclass>
    <innernamespace refid="namespacetuple">tuple</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">export</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">module</highlight><highlight class="normal"><sp/><ref refid="module_tuple" kindref="compound">tuple</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>std;</highlight></codeline>
<codeline lineno="6" refid="namespacetuple" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">export</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetuple" kindref="compound">tuple</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="16" refid="classtuple_1_1tuple" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespacetuple" kindref="compound">tuple</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;float,<sp/>N&gt;<sp/>data{};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple" kindref="compound">tuple</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;float,<sp/>N&gt;<sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref>)<sp/>:<sp/>data{<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple" kindref="compound">tuple</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;float&gt;<sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref>.begin(),<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref>.end(),<sp/>data.begin());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_point()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[3]<sp/>==<sp/>1.0F;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_vector()</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[3]<sp/>==<sp/>0.0F;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[0];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[1];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[2];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[3];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[i];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[i];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">Ts</ref>&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="classtuple_1_1tuple" kindref="compound">tuple&lt;4&gt;</ref><sp/><ref refid="namespacetuple_1ac5c930222bb77139eb2f130fc9a62c04" kindref="member">point</ref>(<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">Ts</ref>...<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;float,<sp/>3&gt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref><sp/>=<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">args</ref>)...};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;float,<sp/>4&gt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>{};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>[i]<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref>[i];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>[3]<sp/>=<sp/>1.0F;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tuple&lt;4&gt;{<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">Ts</ref>&gt;<sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>tuple&lt;4&gt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">vector</ref>(<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">Ts</ref>...<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;float,<sp/>3&gt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref><sp/>=<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">args</ref>)...};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;float,<sp/>4&gt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>{};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>[i]<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">input_data</ref>[i];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>[3]<sp/>=<sp/>0.0F;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tuple&lt;4&gt;{<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a4a77219a132c57c2607bec78f9c6438b" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">N</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::abs(<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>[i]<sp/>-<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[i])<sp/>&gt;<sp/>1<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">e</ref>-5)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/><ref refid="namespacetuple_1acd2febce3694239c8b4ee17c5fd3c6f4" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple" kindref="compound">tuple</ref><sp/>result<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">N</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]<sp/>+=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[i];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/><ref refid="namespacetuple_1a21b409178b4269066162d66ca2de1511" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple" kindref="compound">tuple</ref><sp/>result<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">N</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]<sp/>-=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[i];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/><ref refid="namespacetuple_1afabd951b45dc1eeac3ea64d87555d786" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">num</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple" kindref="compound">tuple</ref><sp/>result<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]<sp/>*=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">num</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/><ref refid="namespacetuple_1ab29fd9a4895c983992b34f99ec665ddf" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">num</ref>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple" kindref="compound">tuple</ref><sp/>result<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]<sp/>/=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">num</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a86782101bce1f49181cb190917b5359a" kindref="member">magnitude</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">in_tuple</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="attr_8cpp_1ae99a05a203907d1381a00d9e05425ab7" kindref="member">sum</ref>{0};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">N</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="attr_8cpp_1ae99a05a203907d1381a00d9e05425ab7" kindref="member">sum</ref><sp/>+=<sp/>std::pow(<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">in_tuple</ref>[i],<sp/>2);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(<ref refid="attr_8cpp_1ae99a05a203907d1381a00d9e05425ab7" kindref="member">sum</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/><ref refid="namespacetuple_1a57cafb06933427186473ea91d9e197e0" kindref="member">normalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">in_tuple</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple_magnitude</ref>{<ref refid="namespacetuple_1a86782101bce1f49181cb190917b5359a" kindref="member">magnitude</ref>(<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">in_tuple</ref>)};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>{<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">in_tuple</ref>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">N</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>[i]<sp/>/=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple_magnitude</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1ae8a3c5721eea747e21d3bd0126c18dce" kindref="member">dot_product</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">tuple&lt;N&gt;</ref><sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="attr_8cpp_1ae99a05a203907d1381a00d9e05425ab7" kindref="member">sum</ref>{};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i{0};<sp/>i<sp/>&lt;<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">N</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="attr_8cpp_1ae99a05a203907d1381a00d9e05425ab7" kindref="member">sum</ref><sp/>+=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>[i]<sp/>*<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[i];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="attr_8cpp_1ae99a05a203907d1381a00d9e05425ab7" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">tuple&lt;4&gt;<sp/><ref refid="namespacetuple_1a955debf0a294656c7bd1655e106e7edb" kindref="member">cross_product</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tuple&lt;4&gt;<sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tuple&lt;4&gt;<sp/>&amp;<ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetuple" kindref="compound">tuple</ref><sp/>result<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>[1]<sp/>*<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[2]<sp/>-<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>[2]<sp/>*<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[1];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>[2]<sp/>*<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[0]<sp/>-<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>[0]<sp/>*<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[2];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>[0]<sp/>*<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[1]<sp/>-<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">ls_tuple</ref>[1]<sp/>*<sp/><ref refid="namespacetuple_1a90ad13297430ff9228509271c63934e1" kindref="member">rs_tuple</ref>[0];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tuple</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/tuple.cpp"/>
  </compounddef>
</doxygen>
