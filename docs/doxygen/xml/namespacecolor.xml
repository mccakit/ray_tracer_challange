<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacecolor" kind="namespace" language="C++">
    <compoundname>color</compoundname>
    <innerclass refid="classcolor_1_1color" prot="public">color::color</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacecolor_1a8588d7afe41d3f541b62b2b4b78ff0c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool color::operator==</definition>
        <argsstring>(const color &amp;ls_color, const color &amp;rs_color)</argsstring>
        <name>operator==</name>
        <qualifiedname>color::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>ls_color</declname>
        </param>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>rs_color</declname>
        </param>
        <briefdescription>
<para>Compares two colors with epsilon 1e-5. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" line="46" column="6" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" bodystart="46" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespacecolor_1a90e18683cacefcc90a3c384cbdba176f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcolor_1_1color" kindref="compound">color</ref></type>
        <definition>color color::operator+</definition>
        <argsstring>(const color &amp;ls_color, const color &amp;rs_color)</argsstring>
        <name>operator+</name>
        <qualifiedname>color::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>ls_color</declname>
        </param>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>rs_color</declname>
        </param>
        <briefdescription>
<para>Component-wise addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" line="61" column="7" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" bodystart="61" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespacecolor_1a024ddfc4222d81fefa8f0ff061b51547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcolor_1_1color" kindref="compound">color</ref></type>
        <definition>color color::operator-</definition>
        <argsstring>(const color &amp;ls_color, const color &amp;rs_color)</argsstring>
        <name>operator-</name>
        <qualifiedname>color::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>ls_color</declname>
        </param>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>rs_color</declname>
        </param>
        <briefdescription>
<para>Component-wise subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" line="72" column="7" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacecolor_1aebb41bfc6f05ccbcc6460d814bce6fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcolor_1_1color" kindref="compound">color</ref></type>
        <definition>color color::operator*</definition>
        <argsstring>(const color &amp;ls_color, const float num)</argsstring>
        <name>operator*</name>
        <qualifiedname>color::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>ls_color</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Multiply color by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" line="83" column="7" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespacecolor_1a683ea01fdaa3ebf831e5e248112abfde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcolor_1_1color" kindref="compound">color</ref></type>
        <definition>color color::operator/</definition>
        <argsstring>(const color &amp;ls_color, const float num)</argsstring>
        <name>operator/</name>
        <qualifiedname>color::operator/</qualifiedname>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>ls_color</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Divide color by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" line="94" column="7" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" bodystart="94" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespacecolor_1af0a551a079831b4b34a9069937afdd62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcolor_1_1color" kindref="compound">color</ref></type>
        <definition>color color::operator*</definition>
        <argsstring>(const color &amp;ls_color, const color &amp;rs_color)</argsstring>
        <name>operator*</name>
        <qualifiedname>color::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>ls_color</declname>
        </param>
        <param>
          <type>const <ref refid="classcolor_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>rs_color</declname>
        </param>
        <briefdescription>
<para>Component-wise multiplication of two colors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" line="105" column="7" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" bodystart="105" bodyend="111"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Namespace containing color-related types and operations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mccakit/desktop/projects/ray_tracer_challange/src/color.cpp" line="6" column="1"/>
  </compounddef>
</doxygen>
