<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfoo" kind="struct" language="C++" prot="public">
    <compoundname>foo</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfoo_1a9dee67bdd7dd530ce96be52a387308ed" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int foo::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <qualifiedname>foo::a</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" line="13" column="7" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="variable" id="structfoo_1af365aaf546ba987e692a6638577eb60f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool foo::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <qualifiedname>foo::b</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" line="14" column="8" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" bodystart="14" bodyend="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfoo_1ae0a28347ab7c4829ff6d4d302248249c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto foo::operator==</definition>
        <argsstring>(const foo &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>foo::operator==</qualifiedname>
        <param>
          <type>const <ref refid="structfoo" kindref="compound">foo</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" line="16" column="18" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="structfoo_1acbf8e57aec555112e00cf9f5131c1e8d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto foo::operator!=</definition>
        <argsstring>(const foo &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>foo::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="structfoo" kindref="compound">foo</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" line="20" column="18" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="structfoo_1afcd30a3edc9aa71160eca9154ad6674f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const foo &amp;f)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>foo::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structfoo" kindref="compound">foo</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" line="24" column="10" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" line="12" column="1" bodyfile="/home/mccakit/desktop/projects/ray_tracer_challange/deps/ut/example/terse.cpp" bodystart="12" bodyend="27"/>
    <listofallmembers>
      <member refid="structfoo_1a9dee67bdd7dd530ce96be52a387308ed" prot="public" virt="non-virtual"><scope>foo</scope><name>a</name></member>
      <member refid="structfoo_1af365aaf546ba987e692a6638577eb60f" prot="public" virt="non-virtual"><scope>foo</scope><name>b</name></member>
      <member refid="structfoo_1acbf8e57aec555112e00cf9f5131c1e8d" prot="public" virt="non-virtual"><scope>foo</scope><name>operator!=</name></member>
      <member refid="structfoo_1afcd30a3edc9aa71160eca9154ad6674f" prot="public" virt="non-virtual"><scope>foo</scope><name>operator&lt;&lt;</name></member>
      <member refid="structfoo_1ae0a28347ab7c4829ff6d4d302248249c" prot="public" virt="non-virtual"><scope>foo</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
